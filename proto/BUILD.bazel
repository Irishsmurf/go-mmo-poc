load("@rules_go//go:def.bzl", "go_library")

# proto/BUILD.bazel

load("@rules_go//proto:def.bzl", "go_proto_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

proto_library(
    name = "mmo_metadata_proto",
    srcs = [
        "metadata.proto",
        "mmo.proto",
    ],
    visibility = ["//visibility:public"],
)

# Define the Protobuf source files
proto_library(
    name = "mmo_proto",
    srcs = ["mmo.proto"],
    visibility = ["//visibility:public"],
)

# Generate Go code from the proto_library
go_proto_library(
    name = "mmo_go_proto",
    compilers = ["@rules_go//proto:go_grpc"],
    importpath = "github.com/irishsmurf/go-mmo-poc/proto",
    proto = ":mmo_metadata_proto",
    visibility = ["//visibility:public"],
)

# Gazelle needs to know about proto rules to avoid overwriting
# gazelle:proto_strip_import_prefix / # For old rules_proto
# gazelle:proto disable # For newer rules_proto, tell gazelle to ignore .proto files

go_library(
    name = "proto",
    srcs = [
        "metadata.pb.go",
        "metadata_grpc.pb.go",
        "mmo.pb.go",
    ],
    importpath = "github.com/irishsmurf/go-mmo-poc/proto",
    visibility = ["//visibility:public"],
    deps = [
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//reflect/protoreflect",
        "@org_golang_google_protobuf//runtime/protoimpl",
    ],
)
