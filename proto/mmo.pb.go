// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: proto/mmo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TerrainType int32

const (
	TerrainType_GRASS TerrainType = 0
	TerrainType_CLAY  TerrainType = 1
	TerrainType_SAND  TerrainType = 2
	TerrainType_WATER TerrainType = 3
)

// Enum value maps for TerrainType.
var (
	TerrainType_name = map[int32]string{
		0: "GRASS",
		1: "CLAY",
		2: "SAND",
		3: "WATER",
	}
	TerrainType_value = map[string]int32{
		"GRASS": 0,
		"CLAY":  1,
		"SAND":  2,
		"WATER": 3,
	}
)

func (x TerrainType) Enum() *TerrainType {
	p := new(TerrainType)
	*p = x
	return p
}

func (x TerrainType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TerrainType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mmo_proto_enumTypes[0].Descriptor()
}

func (TerrainType) Type() protoreflect.EnumType {
	return &file_proto_mmo_proto_enumTypes[0]
}

func (x TerrainType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TerrainType.Descriptor instead.
func (TerrainType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{0}
}

type CompressionType int32

const (
	CompressionType_NONE CompressionType = 0
	CompressionType_ZLIB CompressionType = 1
)

// Enum value maps for CompressionType.
var (
	CompressionType_name = map[int32]string{
		0: "NONE",
		1: "ZLIB",
	}
	CompressionType_value = map[string]int32{
		"NONE": 0,
		"ZLIB": 1,
	}
)

func (x CompressionType) Enum() *CompressionType {
	p := new(CompressionType)
	*p = x
	return p
}

func (x CompressionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mmo_proto_enumTypes[1].Descriptor()
}

func (CompressionType) Type() protoreflect.EnumType {
	return &file_proto_mmo_proto_enumTypes[1]
}

func (x CompressionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressionType.Descriptor instead.
func (CompressionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{1}
}

// --- Basic Types ---
// ... (Vector2, TerrainType, CompressionType) ...
type Vector2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vector2) Reset() {
	*x = Vector2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector2) ProtoMessage() {}

func (x *Vector2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector2.ProtoReflect.Descriptor instead.
func (*Vector2) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{0}
}

func (x *Vector2) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector2) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// --- World Data ---
// ... (ColorDefinition, TerrainColorMap, WorldChunk with compression) ...
type ColorDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HexColor string `protobuf:"bytes,1,opt,name=hex_color,json=hexColor,proto3" json:"hex_color,omitempty"`
}

func (x *ColorDefinition) Reset() {
	*x = ColorDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorDefinition) ProtoMessage() {}

func (x *ColorDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorDefinition.ProtoReflect.Descriptor instead.
func (*ColorDefinition) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{1}
}

func (x *ColorDefinition) GetHexColor() string {
	if x != nil {
		return x.HexColor
	}
	return ""
}

type TerrainColorMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeToColor map[int32]*ColorDefinition `protobuf:"bytes,1,rep,name=type_to_color,json=typeToColor,proto3" json:"type_to_color,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TerrainColorMap) Reset() {
	*x = TerrainColorMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerrainColorMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainColorMap) ProtoMessage() {}

func (x *TerrainColorMap) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainColorMap.ProtoReflect.Descriptor instead.
func (*TerrainColorMap) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{2}
}

func (x *TerrainColorMap) GetTypeToColor() map[int32]*ColorDefinition {
	if x != nil {
		return x.TypeToColor
	}
	return nil
}

type WorldChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkX      int32           `protobuf:"varint,1,opt,name=chunk_x,json=chunkX,proto3" json:"chunk_x,omitempty"`
	ChunkY      int32           `protobuf:"varint,2,opt,name=chunk_y,json=chunkY,proto3" json:"chunk_y,omitempty"`
	TerrainData []byte          `protobuf:"bytes,3,opt,name=terrain_data,json=terrainData,proto3" json:"terrain_data,omitempty"` // Potentially compressed
	Compression CompressionType `protobuf:"varint,4,opt,name=compression,proto3,enum=proto.CompressionType" json:"compression,omitempty"`
}

func (x *WorldChunk) Reset() {
	*x = WorldChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldChunk) ProtoMessage() {}

func (x *WorldChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldChunk.ProtoReflect.Descriptor instead.
func (*WorldChunk) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{3}
}

func (x *WorldChunk) GetChunkX() int32 {
	if x != nil {
		return x.ChunkX
	}
	return 0
}

func (x *WorldChunk) GetChunkY() int32 {
	if x != nil {
		return x.ChunkY
	}
	return 0
}

func (x *WorldChunk) GetTerrainData() []byte {
	if x != nil {
		return x.TerrainData
	}
	return nil
}

func (x *WorldChunk) GetCompression() CompressionType {
	if x != nil {
		return x.Compression
	}
	return CompressionType_NONE
}

// --- Entity Data ---
// ... (EntityState - use optional or plan for deltas) ...
type EntityState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string   `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Position *Vector2 `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	ColorHex string   `protobuf:"bytes,3,opt,name=color_hex,json=colorHex,proto3" json:"color_hex,omitempty"`
}

func (x *EntityState) Reset() {
	*x = EntityState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityState) ProtoMessage() {}

func (x *EntityState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityState.ProtoReflect.Descriptor instead.
func (*EntityState) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{4}
}

func (x *EntityState) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EntityState) GetPosition() *Vector2 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *EntityState) GetColorHex() string {
	if x != nil {
		return x.ColorHex
	}
	return ""
}

// --- Client -> Server Messages ---
// ... (RequestChunk, PlayerInput, ClientRequest wrapper) ...
type RequestChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkX int32 `protobuf:"varint,1,opt,name=chunk_x,json=chunkX,proto3" json:"chunk_x,omitempty"`
	ChunkY int32 `protobuf:"varint,2,opt,name=chunk_y,json=chunkY,proto3" json:"chunk_y,omitempty"`
}

func (x *RequestChunk) Reset() {
	*x = RequestChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestChunk) ProtoMessage() {}

func (x *RequestChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestChunk.ProtoReflect.Descriptor instead.
func (*RequestChunk) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{5}
}

func (x *RequestChunk) GetChunkX() int32 {
	if x != nil {
		return x.ChunkX
	}
	return 0
}

func (x *RequestChunk) GetChunkY() int32 {
	if x != nil {
		return x.ChunkY
	}
	return 0
}

type PlayerInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoveForward bool    `protobuf:"varint,1,opt,name=move_forward,json=moveForward,proto3" json:"move_forward,omitempty"`
	TurnDelta   float32 `protobuf:"fixed32,2,opt,name=turn_delta,json=turnDelta,proto3" json:"turn_delta,omitempty"`
}

func (x *PlayerInput) Reset() {
	*x = PlayerInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInput) ProtoMessage() {}

func (x *PlayerInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInput.ProtoReflect.Descriptor instead.
func (*PlayerInput) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerInput) GetMoveForward() bool {
	if x != nil {
		return x.MoveForward
	}
	return false
}

func (x *PlayerInput) GetTurnDelta() float32 {
	if x != nil {
		return x.TurnDelta
	}
	return 0
}

type ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RequestType:
	//
	//	*ClientRequest_RequestChunk
	//	*ClientRequest_PlayerInput
	RequestType isClientRequest_RequestType `protobuf_oneof:"request_type"`
}

func (x *ClientRequest) Reset() {
	*x = ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRequest) ProtoMessage() {}

func (x *ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRequest.ProtoReflect.Descriptor instead.
func (*ClientRequest) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{7}
}

func (m *ClientRequest) GetRequestType() isClientRequest_RequestType {
	if m != nil {
		return m.RequestType
	}
	return nil
}

func (x *ClientRequest) GetRequestChunk() *RequestChunk {
	if x, ok := x.GetRequestType().(*ClientRequest_RequestChunk); ok {
		return x.RequestChunk
	}
	return nil
}

func (x *ClientRequest) GetPlayerInput() *PlayerInput {
	if x, ok := x.GetRequestType().(*ClientRequest_PlayerInput); ok {
		return x.PlayerInput
	}
	return nil
}

type isClientRequest_RequestType interface {
	isClientRequest_RequestType()
}

type ClientRequest_RequestChunk struct {
	RequestChunk *RequestChunk `protobuf:"bytes,1,opt,name=request_chunk,json=requestChunk,proto3,oneof"`
}

type ClientRequest_PlayerInput struct {
	PlayerInput *PlayerInput `protobuf:"bytes,2,opt,name=player_input,json=playerInput,proto3,oneof"`
}

func (*ClientRequest_RequestChunk) isClientRequest_RequestType() {}

func (*ClientRequest_PlayerInput) isClientRequest_RequestType() {}

// --- Server -> Client Messages ---
// ... (InitData, StateUpdate, ServerMessage wrapper) ...
type InitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YourEntityId    string           `protobuf:"bytes,1,opt,name=your_entity_id,json=yourEntityId,proto3" json:"your_entity_id,omitempty"`
	InitialState    *EntityState     `protobuf:"bytes,2,opt,name=initial_state,json=initialState,proto3" json:"initial_state,omitempty"`
	ColorMap        *TerrainColorMap `protobuf:"bytes,3,opt,name=color_map,json=colorMap,proto3" json:"color_map,omitempty"`
	WorldTileWidth  int32            `protobuf:"varint,4,opt,name=world_tile_width,json=worldTileWidth,proto3" json:"world_tile_width,omitempty"`
	WorldTileHeight int32            `protobuf:"varint,5,opt,name=world_tile_height,json=worldTileHeight,proto3" json:"world_tile_height,omitempty"`
	ChunkSizeTiles  int32            `protobuf:"varint,6,opt,name=chunk_size_tiles,json=chunkSizeTiles,proto3" json:"chunk_size_tiles,omitempty"`
	TileRenderSize  int32            `protobuf:"varint,7,opt,name=tile_render_size,json=tileRenderSize,proto3" json:"tile_render_size,omitempty"`
}

func (x *InitData) Reset() {
	*x = InitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitData) ProtoMessage() {}

func (x *InitData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitData.ProtoReflect.Descriptor instead.
func (*InitData) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{8}
}

func (x *InitData) GetYourEntityId() string {
	if x != nil {
		return x.YourEntityId
	}
	return ""
}

func (x *InitData) GetInitialState() *EntityState {
	if x != nil {
		return x.InitialState
	}
	return nil
}

func (x *InitData) GetColorMap() *TerrainColorMap {
	if x != nil {
		return x.ColorMap
	}
	return nil
}

func (x *InitData) GetWorldTileWidth() int32 {
	if x != nil {
		return x.WorldTileWidth
	}
	return 0
}

func (x *InitData) GetWorldTileHeight() int32 {
	if x != nil {
		return x.WorldTileHeight
	}
	return 0
}

func (x *InitData) GetChunkSizeTiles() int32 {
	if x != nil {
		return x.ChunkSizeTiles
	}
	return 0
}

func (x *InitData) GetTileRenderSize() int32 {
	if x != nil {
		return x.TileRenderSize
	}
	return 0
}

type StateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTimestampMs int64          `protobuf:"varint,1,opt,name=server_timestamp_ms,json=serverTimestampMs,proto3" json:"server_timestamp_ms,omitempty"`
	Entities          []*EntityState `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
	RemovedEntityIds  []string       `protobuf:"bytes,3,rep,name=removed_entity_ids,json=removedEntityIds,proto3" json:"removed_entity_ids,omitempty"`
}

func (x *StateUpdate) Reset() {
	*x = StateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate) ProtoMessage() {}

func (x *StateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{9}
}

func (x *StateUpdate) GetServerTimestampMs() int64 {
	if x != nil {
		return x.ServerTimestampMs
	}
	return 0
}

func (x *StateUpdate) GetEntities() []*EntityState {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *StateUpdate) GetRemovedEntityIds() []string {
	if x != nil {
		return x.RemovedEntityIds
	}
	return nil
}

type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageType:
	//
	//	*ServerMessage_InitData
	//	*ServerMessage_WorldChunk
	//	*ServerMessage_StateUpdate
	MessageType isServerMessage_MessageType `protobuf_oneof:"message_type"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mmo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mmo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_proto_mmo_proto_rawDescGZIP(), []int{10}
}

func (m *ServerMessage) GetMessageType() isServerMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (x *ServerMessage) GetInitData() *InitData {
	if x, ok := x.GetMessageType().(*ServerMessage_InitData); ok {
		return x.InitData
	}
	return nil
}

func (x *ServerMessage) GetWorldChunk() *WorldChunk {
	if x, ok := x.GetMessageType().(*ServerMessage_WorldChunk); ok {
		return x.WorldChunk
	}
	return nil
}

func (x *ServerMessage) GetStateUpdate() *StateUpdate {
	if x, ok := x.GetMessageType().(*ServerMessage_StateUpdate); ok {
		return x.StateUpdate
	}
	return nil
}

type isServerMessage_MessageType interface {
	isServerMessage_MessageType()
}

type ServerMessage_InitData struct {
	InitData *InitData `protobuf:"bytes,1,opt,name=init_data,json=initData,proto3,oneof"`
}

type ServerMessage_WorldChunk struct {
	WorldChunk *WorldChunk `protobuf:"bytes,2,opt,name=world_chunk,json=worldChunk,proto3,oneof"`
}

type ServerMessage_StateUpdate struct {
	StateUpdate *StateUpdate `protobuf:"bytes,3,opt,name=state_update,json=stateUpdate,proto3,oneof"`
}

func (*ServerMessage_InitData) isServerMessage_MessageType() {}

func (*ServerMessage_WorldChunk) isServerMessage_MessageType() {}

func (*ServerMessage_StateUpdate) isServerMessage_MessageType() {}

var File_proto_mmo_proto protoreflect.FileDescriptor

var file_proto_mmo_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x07, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x32, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22,
	0x2e, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0xb6, 0x01, 0x0a, 0x0f, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x4d, 0x61, 0x70, 0x12, 0x4b, 0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d,
	0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x1a, 0x56, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x5f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x58,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x59, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x32, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x65, 0x78, 0x22, 0x40, 0x0a, 0x0c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x59, 0x22, 0x4f, 0x0a,
	0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x22, 0x94,
	0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x79, 0x6f, 0x75, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x79, 0x6f, 0x75, 0x72,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x33, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72,
	0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x08, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f,
	0x74, 0x69, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x2a, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a,
	0x65, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73,
	0x12, 0x2e, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x22, 0xbe,
	0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x34, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2a,
	0x37, 0x0a, 0x0b, 0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x47, 0x52, 0x41, 0x53, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x4c, 0x41,
	0x59, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x41, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x57, 0x41, 0x54, 0x45, 0x52, 0x10, 0x03, 0x2a, 0x25, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x4c, 0x49, 0x42, 0x10, 0x01, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_mmo_proto_rawDescOnce sync.Once
	file_proto_mmo_proto_rawDescData = file_proto_mmo_proto_rawDesc
)

func file_proto_mmo_proto_rawDescGZIP() []byte {
	file_proto_mmo_proto_rawDescOnce.Do(func() {
		file_proto_mmo_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mmo_proto_rawDescData)
	})
	return file_proto_mmo_proto_rawDescData
}

var file_proto_mmo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_mmo_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_mmo_proto_goTypes = []interface{}{
	(TerrainType)(0),        // 0: proto.TerrainType
	(CompressionType)(0),    // 1: proto.CompressionType
	(*Vector2)(nil),         // 2: proto.Vector2
	(*ColorDefinition)(nil), // 3: proto.ColorDefinition
	(*TerrainColorMap)(nil), // 4: proto.TerrainColorMap
	(*WorldChunk)(nil),      // 5: proto.WorldChunk
	(*EntityState)(nil),     // 6: proto.EntityState
	(*RequestChunk)(nil),    // 7: proto.RequestChunk
	(*PlayerInput)(nil),     // 8: proto.PlayerInput
	(*ClientRequest)(nil),   // 9: proto.ClientRequest
	(*InitData)(nil),        // 10: proto.InitData
	(*StateUpdate)(nil),     // 11: proto.StateUpdate
	(*ServerMessage)(nil),   // 12: proto.ServerMessage
	nil,                     // 13: proto.TerrainColorMap.TypeToColorEntry
}
var file_proto_mmo_proto_depIdxs = []int32{
	13, // 0: proto.TerrainColorMap.type_to_color:type_name -> proto.TerrainColorMap.TypeToColorEntry
	1,  // 1: proto.WorldChunk.compression:type_name -> proto.CompressionType
	2,  // 2: proto.EntityState.position:type_name -> proto.Vector2
	7,  // 3: proto.ClientRequest.request_chunk:type_name -> proto.RequestChunk
	8,  // 4: proto.ClientRequest.player_input:type_name -> proto.PlayerInput
	6,  // 5: proto.InitData.initial_state:type_name -> proto.EntityState
	4,  // 6: proto.InitData.color_map:type_name -> proto.TerrainColorMap
	6,  // 7: proto.StateUpdate.entities:type_name -> proto.EntityState
	10, // 8: proto.ServerMessage.init_data:type_name -> proto.InitData
	5,  // 9: proto.ServerMessage.world_chunk:type_name -> proto.WorldChunk
	11, // 10: proto.ServerMessage.state_update:type_name -> proto.StateUpdate
	3,  // 11: proto.TerrainColorMap.TypeToColorEntry.value:type_name -> proto.ColorDefinition
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_mmo_proto_init() }
func file_proto_mmo_proto_init() {
	if File_proto_mmo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_mmo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerrainColorMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mmo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_mmo_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ClientRequest_RequestChunk)(nil),
		(*ClientRequest_PlayerInput)(nil),
	}
	file_proto_mmo_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ServerMessage_InitData)(nil),
		(*ServerMessage_WorldChunk)(nil),
		(*ServerMessage_StateUpdate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mmo_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_mmo_proto_goTypes,
		DependencyIndexes: file_proto_mmo_proto_depIdxs,
		EnumInfos:         file_proto_mmo_proto_enumTypes,
		MessageInfos:      file_proto_mmo_proto_msgTypes,
	}.Build()
	File_proto_mmo_proto = out.File
	file_proto_mmo_proto_rawDesc = nil
	file_proto_mmo_proto_goTypes = nil
	file_proto_mmo_proto_depIdxs = nil
}
